/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 27 08:40:47 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CalculoIMC_ESTest extends CalculoIMC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(40.0);
      assertEquals("Obesidade Grau III", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(Double.NaN);
      assertEquals("Obesidade Grau III", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[11];
      SystemInUtil.addInputLine("1.0");
      // Undeclared exception!
      try { 
        CalculoIMC.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = CalculoIMC.calcularPeso(0.0, (-1488.603320207449));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = CalculoIMC.calcularPeso((-1499.218056824397), 1344.80125);
      assertEquals((-8.289886720798321E-4), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("");
      // Undeclared exception!
      try { 
        CalculoIMC.programaIMC("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("7|7cm)@RvU");
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        CalculoIMC.main(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalculoIMC.programaIMC("Obesidade Grau I");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(35.51539844866851);
      assertEquals("Obesidade Grau II", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(35.0);
      assertEquals("Obesidade Grau II", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(30.567580070086187);
      assertEquals("Obesidade Grau I", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(30.0);
      assertEquals("Obesidade Grau I", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(26.423333552553963);
      assertEquals("Sobrepeso", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(25.0);
      assertEquals("Sobrepeso", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(21.36541204);
      assertEquals("Saud\u00E1vel", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(18.5);
      assertEquals("Saud\u00E1vel", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(17.993394);
      assertEquals("Magreza leve", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(17.0);
      assertEquals("Magreza leve", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(16.0);
      assertEquals("Magreza moderada", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(0.058823529411764705);
      assertEquals("Magreza grave", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = CalculoIMC.classificarIMC(16.17758309485164);
      assertEquals("Magreza moderada", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = CalculoIMC.calcularPeso(17.0, 17.0);
      assertEquals(0.058823529411764705, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CalculoIMC calculoIMC0 = new CalculoIMC();
  }
}
